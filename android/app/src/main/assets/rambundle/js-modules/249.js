__d(function(g,r,i,a,m,e,d){'use strict';var o=r(d[0]),s=r(d[1]),n=r(d[2]),l=r(d[3]),t=r(d[4]),c=r(d[5]),p=r(d[6]),h=r(d[7]),u=r(d[8]),S=r(d[9]),b=r(d[10]).ScrollViewManager,R={Mixin:{_subscriptionKeyboardWillShow:null,_subscriptionKeyboardWillHide:null,_subscriptionKeyboardDidShow:null,_subscriptionKeyboardDidHide:null,scrollResponderMixinGetInitialState:function(){return{isTouching:!1,lastMomentumScrollBeginTime:0,lastMomentumScrollEndTime:0,observedScrollSinceBecomingResponder:!1,becameResponderWhileAnimating:!1}},scrollResponderHandleScrollShouldSetResponder:function(){return this.state.isTouching},scrollResponderHandleStartShouldSetResponder:function(o){var s=t.currentlyFocusedField();return'handled'===this.props.keyboardShouldPersistTaps&&null!=s&&o.target!==s},scrollResponderHandleStartShouldSetResponderCapture:function(o){if(this.scrollResponderIsAnimating())return!0;var s=t.currentlyFocusedField(),n=this.props.keyboardShouldPersistTaps;return!(n&&'never'!==n||null==s||!o.target||t.isTextInput(o.target))},scrollResponderHandleResponderReject:function(){},scrollResponderHandleTerminationRequest:function(){return!this.state.observedScrollSinceBecomingResponder},scrollResponderHandleTouchEnd:function(o){var s=o.nativeEvent;this.state.isTouching=0!==s.touches.length,this.props.onTouchEnd&&this.props.onTouchEnd(o)},scrollResponderHandleTouchCancel:function(o){this.state.isTouching=!1,this.props.onTouchCancel&&this.props.onTouchCancel(o)},scrollResponderHandleResponderRelease:function(o){this.props.onResponderRelease&&this.props.onResponderRelease(o);var s=t.currentlyFocusedField();!0===this.props.keyboardShouldPersistTaps||'always'===this.props.keyboardShouldPersistTaps||null==s||o.target===s||this.state.observedScrollSinceBecomingResponder||this.state.becameResponderWhileAnimating||(this.props.onScrollResponderKeyboardDismissed&&this.props.onScrollResponderKeyboardDismissed(o),t.blurTextInput(s))},scrollResponderHandleScroll:function(o){this.state.observedScrollSinceBecomingResponder=!0,this.props.onScroll&&this.props.onScroll(o)},scrollResponderHandleResponderGrant:function(o){this.state.observedScrollSinceBecomingResponder=!1,this.props.onResponderGrant&&this.props.onResponderGrant(o),this.state.becameResponderWhileAnimating=this.scrollResponderIsAnimating()},scrollResponderHandleScrollBeginDrag:function(o){s.beginScroll(),this.props.onScrollBeginDrag&&this.props.onScrollBeginDrag(o)},scrollResponderHandleScrollEndDrag:function(o){var n=o.nativeEvent.velocity;this.scrollResponderIsAnimating()||n&&(0!==n.x||0!==n.y)||s.endScroll(),this.props.onScrollEndDrag&&this.props.onScrollEndDrag(o)},scrollResponderHandleMomentumScrollBegin:function(o){this.state.lastMomentumScrollBeginTime=u(),this.props.onMomentumScrollBegin&&this.props.onMomentumScrollBegin(o)},scrollResponderHandleMomentumScrollEnd:function(o){s.endScroll(),this.state.lastMomentumScrollEndTime=u(),this.props.onMomentumScrollEnd&&this.props.onMomentumScrollEnd(o)},scrollResponderHandleTouchStart:function(o){this.state.isTouching=!0,this.props.onTouchStart&&this.props.onTouchStart(o)},scrollResponderHandleTouchMove:function(o){this.props.onTouchMove&&this.props.onTouchMove(o)},scrollResponderIsAnimating:function(){return u()-this.state.lastMomentumScrollEndTime<16||this.state.lastMomentumScrollEndTime<this.state.lastMomentumScrollBeginTime},scrollResponderGetScrollableNode:function(){return this.getScrollableNode?this.getScrollableNode():l.findNodeHandle(this)},scrollResponderScrollTo:function(o,s,n){if('number'==typeof o)console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');else{var l=o||{};o=l.x,s=l.y,n=l.animated}c.dispatchViewManagerCommand(h(this.scrollResponderGetScrollableNode()),c.getViewManagerConfig('RCTScrollView').Commands.scrollTo,[o||0,s||0,!1!==n])},scrollResponderScrollToEnd:function(o){var s=!1!==(o&&o.animated);c.dispatchViewManagerCommand(this.scrollResponderGetScrollableNode(),c.getViewManagerConfig('RCTScrollView').Commands.scrollToEnd,[s])},scrollResponderScrollWithoutAnimationTo:function(o,s){console.warn('`scrollResponderScrollWithoutAnimationTo` is deprecated. Use `scrollResponderScrollTo` instead'),this.scrollResponderScrollTo({x:o,y:s,animated:!1})},scrollResponderZoomTo:function(o,s){p(b&&b.zoomToRect,'zoomToRect is not implemented'),'animated'in o?(s=o.animated,delete o.animated):void 0!==s&&console.warn('`scrollResponderZoomTo` `animated` argument is deprecated. Use `options.animated` instead'),b.zoomToRect(this.scrollResponderGetScrollableNode(),o,!1!==s)},scrollResponderFlashScrollIndicators:function(){c.dispatchViewManagerCommand(this.scrollResponderGetScrollableNode(),c.getViewManagerConfig('RCTScrollView').Commands.flashScrollIndicators,[])},scrollResponderScrollNativeHandleToKeyboard:function(o,s,n){this.additionalScrollOffset=s||0,this.preventNegativeScrollOffset=!!n,c.measureLayout(o,l.findNodeHandle(this.getInnerViewNode()),this.scrollResponderTextInputFocusError,this.scrollResponderInputMeasureAndScrollToKeyboard)},scrollResponderInputMeasureAndScrollToKeyboard:function(s,n,l,t){var c=o.get('window').height;this.keyboardWillOpenTo&&(c=this.keyboardWillOpenTo.endCoordinates.screenY);var p=n-c+t+this.additionalScrollOffset;this.preventNegativeScrollOffset&&(p=Math.max(0,p)),this.scrollResponderScrollTo({x:0,y:p,animated:!0}),this.additionalOffset=0,this.preventNegativeScrollOffset=!1},scrollResponderTextInputFocusError:function(o){console.error('Error measuring text field: ',o)},UNSAFE_componentWillMount:function(){var o=this.props.keyboardShouldPersistTaps;S('boolean'!=typeof o,"'keyboardShouldPersistTaps={"+o+"}' is deprecated. Use 'keyboardShouldPersistTaps=\""+(o?'always':'never')+"\"' instead"),this.keyboardWillOpenTo=null,this.additionalScrollOffset=0,this._subscriptionKeyboardWillShow=n.addListener('keyboardWillShow',this.scrollResponderKeyboardWillShow),this._subscriptionKeyboardWillHide=n.addListener('keyboardWillHide',this.scrollResponderKeyboardWillHide),this._subscriptionKeyboardDidShow=n.addListener('keyboardDidShow',this.scrollResponderKeyboardDidShow),this._subscriptionKeyboardDidHide=n.addListener('keyboardDidHide',this.scrollResponderKeyboardDidHide)},componentWillUnmount:function(){null!=this._subscriptionKeyboardWillShow&&this._subscriptionKeyboardWillShow.remove(),null!=this._subscriptionKeyboardWillHide&&this._subscriptionKeyboardWillHide.remove(),null!=this._subscriptionKeyboardDidShow&&this._subscriptionKeyboardDidShow.remove(),null!=this._subscriptionKeyboardDidHide&&this._subscriptionKeyboardDidHide.remove()},scrollResponderKeyboardWillShow:function(o){this.keyboardWillOpenTo=o,this.props.onKeyboardWillShow&&this.props.onKeyboardWillShow(o)},scrollResponderKeyboardWillHide:function(o){this.keyboardWillOpenTo=null,this.props.onKeyboardWillHide&&this.props.onKeyboardWillHide(o)},scrollResponderKeyboardDidShow:function(o){o&&(this.keyboardWillOpenTo=o),this.props.onKeyboardDidShow&&this.props.onKeyboardDidShow(o)},scrollResponderKeyboardDidHide:function(o){this.keyboardWillOpenTo=null,this.props.onKeyboardDidHide&&this.props.onKeyboardDidHide(o)}}};m.exports=R},249,[63,250,251,87,166,51,14,203,117,120,16]);