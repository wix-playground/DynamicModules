__d(function(g,r,i,a,m,e,d){'use strict';var n,t=r(d[0]),o=r(d[1]),c=(r(d[2]),o.NetInfo),f=new t(c),u=new Map;function s(n){return'none'!==n.type&&'unknown'!==n.type}n=function(n){return'NONE'!==n&&'UNKNOWN'!==n};var v=new Map,C={addEventListener:function(n,t){var o;if('connectionChange'===n)o=f.addListener("networkStatusDidChange",function(n){t({type:n.connectionType,effectiveType:n.effectiveConnectionType})});else{if('change'!==n)return console.warn('Trying to subscribe to unknown event: "'+n+'"'),{remove:function(){}};console.warn('NetInfo\'s "change" event is deprecated. Listen to the "connectionChange" event instead.'),o=f.addListener("networkStatusDidChange",function(n){t(n.network_info)})}return u.set(t,o),{remove:function(){return C.removeEventListener(n,t)}}},removeEventListener:function(n,t){var o=u.get(t);o&&(o.remove(),u.delete(t))},fetch:function(){return console.warn('NetInfo.fetch() is deprecated. Use NetInfo.getConnectionInfo() instead.'),c.getCurrentConnectivity().then(function(n){return n.network_info})},getConnectionInfo:function(){return c.getCurrentConnectivity().then(function(n){return{type:n.connectionType,effectiveType:n.effectiveConnectionType}})},isConnected:{addEventListener:function(t,o){var c=function(c){'change'===t?o(n(c)):'connectionChange'===t&&o(s(c))};return v.set(o,c),C.addEventListener(t,c),{remove:function(){return C.isConnected.removeEventListener(t,o)}}},removeEventListener:function(n,t){var o=v.get(t);C.removeEventListener(n,o),v.delete(t)},fetch:function(){return C.getConnectionInfo().then(s)}},isConnectionExpensive:function(){return c.isConnectionMetered()}};m.exports=C},343,[129,16,52]);